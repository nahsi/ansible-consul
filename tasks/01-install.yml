- name: download consul to localhost
  become: false
  run_once: true
  delegate_to: localhost
  get_url:
    url: "{{ _archive_url }}"
    dest: "{{ role_path }}/files/{{ _archive }}"
    checksum: "sha256:{{ _archive_checksum }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2

- name: create consul system group
  group:
    name: "{{ consul_group }}"
    system: true
    state: present

- name: create consul system user
  user:
    name: "{{ consul_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ consul_group }}"
    create_home: false
    state: present

- name: create consul directories
  file:
    path: "{{ dir.value.path }}"
    state: directory
    owner: "{{ dir.group | default('consul') }}"
    group: "{{ dir.group | default('consul') }}"
    mode: "{{ dir.value.mode | default(755) }}"
  loop: "{{ consul_dirs | dict2items }}"
  loop_control:
    loop_var: dir
    label: "{{ dir.key }}"

- name: create archive directory
  become: false
  delegate_to: localhost
  file:
    state: directory
    path: "{{ _archive_dir }}"

- name: unpack consul
  become: false
  delegate_to: localhost
  unarchive:
    src: "{{ role_path }}/files/{{ _archive }}"
    dest: "{{ _archive_dir }}"
    creates: "{{ _archive_dir }}/consul"

- name: propagate consul binary
  copy:
    src: "{{ _archive_dir }}/consul"
    dest: "/usr/bin/consul"
    owner: root
    group: root
    mode: 0555
  notify: restart consul

- name: delete archive directory
  become: false
  delegate_to: localhost
  file:
    dest: "{{ _archive_dir }}"
    state: absent
  when: not lookup("env", "MOLECULE_SCENARIO_NAME") | default("")

- name: create consul config
  tags: config
  copy:
    content: "{{ consul_config | to_nice_json }}"
    dest: "{{ consul_dirs.main.path }}/consul.json"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    validate: "consul validate -config-format=json %s"
  notify: restart consul

- name: create consul unit file
  tags: config
  copy:
    content: "{{ consul_unit }}"
    dest: "/etc/systemd/system/consul.service"
    owner: root
    group: root
    mode: 0755
  notify: restart consul

- name: enable consul
  systemd:
    name: consul
    enabled: true
    daemon_reload: true
  when: not skip_enable
